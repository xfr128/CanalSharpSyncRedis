// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Assets/CanalPacket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CanalSharp.Protocol {

  /// <summary>Holder for reflection information generated from Assets/CanalPacket.proto</summary>
  public static partial class CanalPacketReflection {

    #region Descriptor
    /// <summary>File descriptor for Assets/CanalPacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CanalPacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhBc3NldHMvQ2FuYWxQYWNrZXQucHJvdG8SIGNvbS5hbGliYWJhLm90dGVy",
            "LmNhbmFsLnByb3RvY29sIoUCCgZQYWNrZXQSFgoMbWFnaWNfbnVtYmVyGAEg",
            "ASgFSAASEQoHdmVyc2lvbhgCIAEoBUgBEjoKBHR5cGUYAyABKA4yLC5jb20u",
            "YWxpYmFiYS5vdHRlci5jYW5hbC5wcm90b2NvbC5QYWNrZXRUeXBlEkQKC2Nv",
            "bXByZXNzaW9uGAQgASgOMi0uY29tLmFsaWJhYmEub3R0ZXIuY2FuYWwucHJv",
            "dG9jb2wuQ29tcHJlc3Npb25IAhIMCgRib2R5GAUgASgMQhYKFG1hZ2ljX251",
            "bWJlcl9wcmVzZW50QhEKD3ZlcnNpb25fcHJlc2VudEIVChNjb21wcmVzc2lv",
            "bl9wcmVzZW50IjwKCUhlYXJ0QmVhdBIWCg5zZW5kX3RpbWVzdGFtcBgBIAEo",
            "AxIXCg9zdGFydF90aW1lc3RhbXAYAiABKAMirQEKCUhhbmRzaGFrZRIgChZj",
            "b21tdW5pY2F0aW9uX2VuY29kaW5nGAEgASgJSAASDQoFc2VlZHMYAiABKAwS",
            "TQoWc3VwcG9ydGVkX2NvbXByZXNzaW9ucxgDIAEoDjItLmNvbS5hbGliYWJh",
            "Lm90dGVyLmNhbmFsLnByb3RvY29sLkNvbXByZXNzaW9uQiAKHmNvbW11bmlj",
            "YXRpb25fZW5jb2RpbmdfcHJlc2VudCLzAQoKQ2xpZW50QXV0aBIQCgh1c2Vy",
            "bmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoDBIaChBuZXRfcmVhZF90aW1l",
            "b3V0GAMgASgFSAASGwoRbmV0X3dyaXRlX3RpbWVvdXQYBCABKAVIARITCgtk",
            "ZXN0aW5hdGlvbhgFIAEoCRIRCgljbGllbnRfaWQYBiABKAkSDgoGZmlsdGVy",
            "GAcgASgJEhcKD3N0YXJ0X3RpbWVzdGFtcBgIIAEoA0IaChhuZXRfcmVhZF90",
            "aW1lb3V0X3ByZXNlbnRCGwoZbmV0X3dyaXRlX3RpbWVvdXRfcHJlc2VudCJI",
            "CgNBY2sSFAoKZXJyb3JfY29kZRgBIAEoBUgAEhUKDWVycm9yX21lc3NhZ2UY",
            "AiABKAlCFAoSZXJyb3JfY29kZV9wcmVzZW50IkUKCUNsaWVudEFjaxITCgtk",
            "ZXN0aW5hdGlvbhgBIAEoCRIRCgljbGllbnRfaWQYAiABKAkSEAoIYmF0Y2hf",
            "aWQYAyABKAMiPQoDU3ViEhMKC2Rlc3RpbmF0aW9uGAEgASgJEhEKCWNsaWVu",
            "dF9pZBgCIAEoCRIOCgZmaWx0ZXIYByABKAkiPwoFVW5zdWISEwoLZGVzdGlu",
            "YXRpb24YASABKAkSEQoJY2xpZW50X2lkGAIgASgJEg4KBmZpbHRlchgHIAEo",
            "CSKvAQoDR2V0EhMKC2Rlc3RpbmF0aW9uGAEgASgJEhEKCWNsaWVudF9pZBgC",
            "IAEoCRISCgpmZXRjaF9zaXplGAMgASgFEhEKB3RpbWVvdXQYBCABKANIABIO",
            "CgR1bml0GAUgASgFSAESEgoIYXV0b19hY2sYBiABKAhIAkIRCg90aW1lb3V0",
            "X3ByZXNlbnRCDgoMdW5pdF9wcmVzZW50QhIKEGF1dG9fYWNrX3ByZXNlbnQi",
            "LgoITWVzc2FnZXMSEAoIYmF0Y2hfaWQYASABKAMSEAoIbWVzc2FnZXMYAiAD",
            "KAwiUwoERHVtcBIPCgdqb3VybmFsGAEgASgJEhAKCHBvc2l0aW9uGAIgASgD",
            "EhMKCXRpbWVzdGFtcBgDIAEoA0gAQhMKEXRpbWVzdGFtcF9wcmVzZW50IkoK",
            "DkNsaWVudFJvbGxiYWNrEhMKC2Rlc3RpbmF0aW9uGAEgASgJEhEKCWNsaWVu",
            "dF9pZBgCIAEoCRIQCghiYXRjaF9pZBgDIAEoAypVCgtDb21wcmVzc2lvbhIf",
            "ChtDT01QUkVTU0lPTkNPTVBBVElCTEVQUk9UTzIQABIICgROT05FEAESCAoE",
            "WkxJQhACEggKBEdaSVAQAxIHCgNMWkYQBCrmAQoKUGFja2V0VHlwZRIfChtQ",
            "QUNLQUdFVFlQRUNPTVBBVElCTEVQUk9UTzIQABINCglIQU5EU0hBS0UQARIY",
            "ChRDTElFTlRBVVRIRU5USUNBVElPThACEgcKA0FDSxADEhAKDFNVQlNDUklQ",
            "VElPThAEEhIKDlVOU1VCU0NSSVBUSU9OEAUSBwoDR0VUEAYSDAoITUVTU0FH",
            "RVMQBxINCglDTElFTlRBQ0sQCBIMCghTSFVURE9XThAJEggKBERVTVAQChIN",
            "CglIRUFSVEJFQVQQCxISCg5DTElFTlRST0xMQkFDSxAMQhhIAaoCE0NhbmFs",
            "U2hhcnAuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CanalSharp.Protocol.Compression), typeof(global::CanalSharp.Protocol.PacketType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Packet), global::CanalSharp.Protocol.Packet.Parser, new[]{ "MagicNumber", "Version", "Type", "Compression", "Body" }, new[]{ "MagicNumberPresent", "VersionPresent", "CompressionPresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.HeartBeat), global::CanalSharp.Protocol.HeartBeat.Parser, new[]{ "SendTimestamp", "StartTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Handshake), global::CanalSharp.Protocol.Handshake.Parser, new[]{ "CommunicationEncoding", "Seeds", "SupportedCompressions" }, new[]{ "CommunicationEncodingPresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.ClientAuth), global::CanalSharp.Protocol.ClientAuth.Parser, new[]{ "Username", "Password", "NetReadTimeout", "NetWriteTimeout", "Destination", "ClientId", "Filter", "StartTimestamp" }, new[]{ "NetReadTimeoutPresent", "NetWriteTimeoutPresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Ack), global::CanalSharp.Protocol.Ack.Parser, new[]{ "ErrorCode", "ErrorMessage" }, new[]{ "ErrorCodePresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.ClientAck), global::CanalSharp.Protocol.ClientAck.Parser, new[]{ "Destination", "ClientId", "BatchId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Sub), global::CanalSharp.Protocol.Sub.Parser, new[]{ "Destination", "ClientId", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Unsub), global::CanalSharp.Protocol.Unsub.Parser, new[]{ "Destination", "ClientId", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Get), global::CanalSharp.Protocol.Get.Parser, new[]{ "Destination", "ClientId", "FetchSize", "Timeout", "Unit", "AutoAck" }, new[]{ "TimeoutPresent", "UnitPresent", "AutoAckPresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Messages), global::CanalSharp.Protocol.Messages.Parser, new[]{ "BatchId", "Messages_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.Dump), global::CanalSharp.Protocol.Dump.Parser, new[]{ "Journal", "Position", "Timestamp" }, new[]{ "TimestampPresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CanalSharp.Protocol.ClientRollback), global::CanalSharp.Protocol.ClientRollback.Parser, new[]{ "Destination", "ClientId", "BatchId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Compression {
    [pbr::OriginalName("COMPRESSIONCOMPATIBLEPROTO2")] Compatibleproto2 = 0,
    [pbr::OriginalName("NONE")] None = 1,
    [pbr::OriginalName("ZLIB")] Zlib = 2,
    [pbr::OriginalName("GZIP")] Gzip = 3,
    [pbr::OriginalName("LZF")] Lzf = 4,
  }

  public enum PacketType {
    /// <summary>
    ///compatible
    /// </summary>
    [pbr::OriginalName("PACKAGETYPECOMPATIBLEPROTO2")] Packagetypecompatibleproto2 = 0,
    [pbr::OriginalName("HANDSHAKE")] Handshake = 1,
    [pbr::OriginalName("CLIENTAUTHENTICATION")] Clientauthentication = 2,
    [pbr::OriginalName("ACK")] Ack = 3,
    [pbr::OriginalName("SUBSCRIPTION")] Subscription = 4,
    [pbr::OriginalName("UNSUBSCRIPTION")] Unsubscription = 5,
    [pbr::OriginalName("GET")] Get = 6,
    [pbr::OriginalName("MESSAGES")] Messages = 7,
    [pbr::OriginalName("CLIENTACK")] Clientack = 8,
    /// <summary>
    /// management part
    /// </summary>
    [pbr::OriginalName("SHUTDOWN")] Shutdown = 9,
    /// <summary>
    /// integration
    /// </summary>
    [pbr::OriginalName("DUMP")] Dump = 10,
    [pbr::OriginalName("HEARTBEAT")] Heartbeat = 11,
    [pbr::OriginalName("CLIENTROLLBACK")] Clientrollback = 12,
  }

  #endregion

  #region Messages
  public sealed partial class Packet : pb::IMessage<Packet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      type_ = other.type_;
      body_ = other.body_;
      switch (other.MagicNumberPresentCase) {
        case MagicNumberPresentOneofCase.MagicNumber:
          MagicNumber = other.MagicNumber;
          break;
      }

      switch (other.VersionPresentCase) {
        case VersionPresentOneofCase.Version:
          Version = other.Version;
          break;
      }

      switch (other.CompressionPresentCase) {
        case CompressionPresentOneofCase.Compression:
          Compression = other.Compression;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "magic_number" field.</summary>
    public const int MagicNumberFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicNumber {
      get { return magicNumberPresentCase_ == MagicNumberPresentOneofCase.MagicNumber ? (int) magicNumberPresent_ : 0; }
      set {
        magicNumberPresent_ = value;
        magicNumberPresentCase_ = MagicNumberPresentOneofCase.MagicNumber;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return versionPresentCase_ == VersionPresentOneofCase.Version ? (int) versionPresent_ : 0; }
      set {
        versionPresent_ = value;
        versionPresentCase_ = VersionPresentOneofCase.Version;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::CanalSharp.Protocol.PacketType type_ = global::CanalSharp.Protocol.PacketType.Packagetypecompatibleproto2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CanalSharp.Protocol.PacketType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CanalSharp.Protocol.Compression Compression {
      get { return compressionPresentCase_ == CompressionPresentOneofCase.Compression ? (global::CanalSharp.Protocol.Compression) compressionPresent_ : global::CanalSharp.Protocol.Compression.Compatibleproto2; }
      set {
        compressionPresent_ = value;
        compressionPresentCase_ = CompressionPresentOneofCase.Compression;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 5;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object magicNumberPresent_;
    /// <summary>Enum of possible cases for the "magic_number_present" oneof.</summary>
    public enum MagicNumberPresentOneofCase {
      None = 0,
      MagicNumber = 1,
    }
    private MagicNumberPresentOneofCase magicNumberPresentCase_ = MagicNumberPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicNumberPresentOneofCase MagicNumberPresentCase {
      get { return magicNumberPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMagicNumberPresent() {
      magicNumberPresentCase_ = MagicNumberPresentOneofCase.None;
      magicNumberPresent_ = null;
    }

    private object versionPresent_;
    /// <summary>Enum of possible cases for the "version_present" oneof.</summary>
    public enum VersionPresentOneofCase {
      None = 0,
      Version = 2,
    }
    private VersionPresentOneofCase versionPresentCase_ = VersionPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionPresentOneofCase VersionPresentCase {
      get { return versionPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionPresent() {
      versionPresentCase_ = VersionPresentOneofCase.None;
      versionPresent_ = null;
    }

    private object compressionPresent_;
    /// <summary>Enum of possible cases for the "compression_present" oneof.</summary>
    public enum CompressionPresentOneofCase {
      None = 0,
      Compression = 4,
    }
    private CompressionPresentOneofCase compressionPresentCase_ = CompressionPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompressionPresentOneofCase CompressionPresentCase {
      get { return compressionPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressionPresent() {
      compressionPresentCase_ = CompressionPresentOneofCase.None;
      compressionPresent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MagicNumber != other.MagicNumber) return false;
      if (Version != other.Version) return false;
      if (Type != other.Type) return false;
      if (Compression != other.Compression) return false;
      if (Body != other.Body) return false;
      if (MagicNumberPresentCase != other.MagicNumberPresentCase) return false;
      if (VersionPresentCase != other.VersionPresentCase) return false;
      if (CompressionPresentCase != other.CompressionPresentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (magicNumberPresentCase_ == MagicNumberPresentOneofCase.MagicNumber) hash ^= MagicNumber.GetHashCode();
      if (versionPresentCase_ == VersionPresentOneofCase.Version) hash ^= Version.GetHashCode();
      if (Type != global::CanalSharp.Protocol.PacketType.Packagetypecompatibleproto2) hash ^= Type.GetHashCode();
      if (compressionPresentCase_ == CompressionPresentOneofCase.Compression) hash ^= Compression.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      hash ^= (int) magicNumberPresentCase_;
      hash ^= (int) versionPresentCase_;
      hash ^= (int) compressionPresentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (magicNumberPresentCase_ == MagicNumberPresentOneofCase.MagicNumber) {
        output.WriteRawTag(8);
        output.WriteInt32(MagicNumber);
      }
      if (versionPresentCase_ == VersionPresentOneofCase.Version) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (Type != global::CanalSharp.Protocol.PacketType.Packagetypecompatibleproto2) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (compressionPresentCase_ == CompressionPresentOneofCase.Compression) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Compression);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (magicNumberPresentCase_ == MagicNumberPresentOneofCase.MagicNumber) {
        output.WriteRawTag(8);
        output.WriteInt32(MagicNumber);
      }
      if (versionPresentCase_ == VersionPresentOneofCase.Version) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (Type != global::CanalSharp.Protocol.PacketType.Packagetypecompatibleproto2) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (compressionPresentCase_ == CompressionPresentOneofCase.Compression) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Compression);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (magicNumberPresentCase_ == MagicNumberPresentOneofCase.MagicNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicNumber);
      }
      if (versionPresentCase_ == VersionPresentOneofCase.Version) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Type != global::CanalSharp.Protocol.PacketType.Packagetypecompatibleproto2) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (compressionPresentCase_ == CompressionPresentOneofCase.Compression) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Compression);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::CanalSharp.Protocol.PacketType.Packagetypecompatibleproto2) {
        Type = other.Type;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      switch (other.MagicNumberPresentCase) {
        case MagicNumberPresentOneofCase.MagicNumber:
          MagicNumber = other.MagicNumber;
          break;
      }

      switch (other.VersionPresentCase) {
        case VersionPresentOneofCase.Version:
          Version = other.Version;
          break;
      }

      switch (other.CompressionPresentCase) {
        case CompressionPresentOneofCase.Compression:
          Compression = other.Compression;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MagicNumber = input.ReadInt32();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::CanalSharp.Protocol.PacketType) input.ReadEnum();
            break;
          }
          case 32: {
            compressionPresent_ = input.ReadEnum();
            compressionPresentCase_ = CompressionPresentOneofCase.Compression;
            break;
          }
          case 42: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MagicNumber = input.ReadInt32();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::CanalSharp.Protocol.PacketType) input.ReadEnum();
            break;
          }
          case 32: {
            compressionPresent_ = input.ReadEnum();
            compressionPresentCase_ = CompressionPresentOneofCase.Compression;
            break;
          }
          case 42: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HeartBeat : pb::IMessage<HeartBeat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeartBeat> _parser = new pb::MessageParser<HeartBeat>(() => new HeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeat(HeartBeat other) : this() {
      sendTimestamp_ = other.sendTimestamp_;
      startTimestamp_ = other.startTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeat Clone() {
      return new HeartBeat(this);
    }

    /// <summary>Field number for the "send_timestamp" field.</summary>
    public const int SendTimestampFieldNumber = 1;
    private long sendTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SendTimestamp {
      get { return sendTimestamp_; }
      set {
        sendTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 2;
    private long startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SendTimestamp != other.SendTimestamp) return false;
      if (StartTimestamp != other.StartTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SendTimestamp != 0L) hash ^= SendTimestamp.GetHashCode();
      if (StartTimestamp != 0L) hash ^= StartTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SendTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SendTimestamp);
      }
      if (StartTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SendTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SendTimestamp);
      }
      if (StartTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SendTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SendTimestamp);
      }
      if (StartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.SendTimestamp != 0L) {
        SendTimestamp = other.SendTimestamp;
      }
      if (other.StartTimestamp != 0L) {
        StartTimestamp = other.StartTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SendTimestamp = input.ReadInt64();
            break;
          }
          case 16: {
            StartTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SendTimestamp = input.ReadInt64();
            break;
          }
          case 16: {
            StartTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Handshake : pb::IMessage<Handshake>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Handshake> _parser = new pb::MessageParser<Handshake>(() => new Handshake());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Handshake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake(Handshake other) : this() {
      seeds_ = other.seeds_;
      supportedCompressions_ = other.supportedCompressions_;
      switch (other.CommunicationEncodingPresentCase) {
        case CommunicationEncodingPresentOneofCase.CommunicationEncoding:
          CommunicationEncoding = other.CommunicationEncoding;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake Clone() {
      return new Handshake(this);
    }

    /// <summary>Field number for the "communication_encoding" field.</summary>
    public const int CommunicationEncodingFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommunicationEncoding {
      get { return communicationEncodingPresentCase_ == CommunicationEncodingPresentOneofCase.CommunicationEncoding ? (string) communicationEncodingPresent_ : ""; }
      set {
        communicationEncodingPresent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        communicationEncodingPresentCase_ = CommunicationEncodingPresentOneofCase.CommunicationEncoding;
      }
    }

    /// <summary>Field number for the "seeds" field.</summary>
    public const int SeedsFieldNumber = 2;
    private pb::ByteString seeds_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Seeds {
      get { return seeds_; }
      set {
        seeds_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supported_compressions" field.</summary>
    public const int SupportedCompressionsFieldNumber = 3;
    private global::CanalSharp.Protocol.Compression supportedCompressions_ = global::CanalSharp.Protocol.Compression.Compatibleproto2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CanalSharp.Protocol.Compression SupportedCompressions {
      get { return supportedCompressions_; }
      set {
        supportedCompressions_ = value;
      }
    }

    private object communicationEncodingPresent_;
    /// <summary>Enum of possible cases for the "communication_encoding_present" oneof.</summary>
    public enum CommunicationEncodingPresentOneofCase {
      None = 0,
      CommunicationEncoding = 1,
    }
    private CommunicationEncodingPresentOneofCase communicationEncodingPresentCase_ = CommunicationEncodingPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommunicationEncodingPresentOneofCase CommunicationEncodingPresentCase {
      get { return communicationEncodingPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCommunicationEncodingPresent() {
      communicationEncodingPresentCase_ = CommunicationEncodingPresentOneofCase.None;
      communicationEncodingPresent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Handshake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Handshake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommunicationEncoding != other.CommunicationEncoding) return false;
      if (Seeds != other.Seeds) return false;
      if (SupportedCompressions != other.SupportedCompressions) return false;
      if (CommunicationEncodingPresentCase != other.CommunicationEncodingPresentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (communicationEncodingPresentCase_ == CommunicationEncodingPresentOneofCase.CommunicationEncoding) hash ^= CommunicationEncoding.GetHashCode();
      if (Seeds.Length != 0) hash ^= Seeds.GetHashCode();
      if (SupportedCompressions != global::CanalSharp.Protocol.Compression.Compatibleproto2) hash ^= SupportedCompressions.GetHashCode();
      hash ^= (int) communicationEncodingPresentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (communicationEncodingPresentCase_ == CommunicationEncodingPresentOneofCase.CommunicationEncoding) {
        output.WriteRawTag(10);
        output.WriteString(CommunicationEncoding);
      }
      if (Seeds.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Seeds);
      }
      if (SupportedCompressions != global::CanalSharp.Protocol.Compression.Compatibleproto2) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SupportedCompressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (communicationEncodingPresentCase_ == CommunicationEncodingPresentOneofCase.CommunicationEncoding) {
        output.WriteRawTag(10);
        output.WriteString(CommunicationEncoding);
      }
      if (Seeds.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Seeds);
      }
      if (SupportedCompressions != global::CanalSharp.Protocol.Compression.Compatibleproto2) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SupportedCompressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (communicationEncodingPresentCase_ == CommunicationEncodingPresentOneofCase.CommunicationEncoding) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommunicationEncoding);
      }
      if (Seeds.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Seeds);
      }
      if (SupportedCompressions != global::CanalSharp.Protocol.Compression.Compatibleproto2) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SupportedCompressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Handshake other) {
      if (other == null) {
        return;
      }
      if (other.Seeds.Length != 0) {
        Seeds = other.Seeds;
      }
      if (other.SupportedCompressions != global::CanalSharp.Protocol.Compression.Compatibleproto2) {
        SupportedCompressions = other.SupportedCompressions;
      }
      switch (other.CommunicationEncodingPresentCase) {
        case CommunicationEncodingPresentOneofCase.CommunicationEncoding:
          CommunicationEncoding = other.CommunicationEncoding;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CommunicationEncoding = input.ReadString();
            break;
          }
          case 18: {
            Seeds = input.ReadBytes();
            break;
          }
          case 24: {
            SupportedCompressions = (global::CanalSharp.Protocol.Compression) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CommunicationEncoding = input.ReadString();
            break;
          }
          case 18: {
            Seeds = input.ReadBytes();
            break;
          }
          case 24: {
            SupportedCompressions = (global::CanalSharp.Protocol.Compression) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// client authentication
  /// </summary>
  public sealed partial class ClientAuth : pb::IMessage<ClientAuth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientAuth> _parser = new pb::MessageParser<ClientAuth>(() => new ClientAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAuth(ClientAuth other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      destination_ = other.destination_;
      clientId_ = other.clientId_;
      filter_ = other.filter_;
      startTimestamp_ = other.startTimestamp_;
      switch (other.NetReadTimeoutPresentCase) {
        case NetReadTimeoutPresentOneofCase.NetReadTimeout:
          NetReadTimeout = other.NetReadTimeout;
          break;
      }

      switch (other.NetWriteTimeoutPresentCase) {
        case NetWriteTimeoutPresentOneofCase.NetWriteTimeout:
          NetWriteTimeout = other.NetWriteTimeout;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAuth Clone() {
      return new ClientAuth(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private pb::ByteString password_ = pb::ByteString.Empty;
    /// <summary>
    /// hashed password with seeds from Handshake message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "net_read_timeout" field.</summary>
    public const int NetReadTimeoutFieldNumber = 3;
    /// <summary>
    /// in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetReadTimeout {
      get { return netReadTimeoutPresentCase_ == NetReadTimeoutPresentOneofCase.NetReadTimeout ? (int) netReadTimeoutPresent_ : 0; }
      set {
        netReadTimeoutPresent_ = value;
        netReadTimeoutPresentCase_ = NetReadTimeoutPresentOneofCase.NetReadTimeout;
      }
    }

    /// <summary>Field number for the "net_write_timeout" field.</summary>
    public const int NetWriteTimeoutFieldNumber = 4;
    /// <summary>
    /// in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NetWriteTimeout {
      get { return netWriteTimeoutPresentCase_ == NetWriteTimeoutPresentOneofCase.NetWriteTimeout ? (int) netWriteTimeoutPresent_ : 0; }
      set {
        netWriteTimeoutPresent_ = value;
        netWriteTimeoutPresentCase_ = NetWriteTimeoutPresentOneofCase.NetWriteTimeout;
      }
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 5;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 6;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 7;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 8;
    private long startTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    private object netReadTimeoutPresent_;
    /// <summary>Enum of possible cases for the "net_read_timeout_present" oneof.</summary>
    public enum NetReadTimeoutPresentOneofCase {
      None = 0,
      NetReadTimeout = 3,
    }
    private NetReadTimeoutPresentOneofCase netReadTimeoutPresentCase_ = NetReadTimeoutPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetReadTimeoutPresentOneofCase NetReadTimeoutPresentCase {
      get { return netReadTimeoutPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNetReadTimeoutPresent() {
      netReadTimeoutPresentCase_ = NetReadTimeoutPresentOneofCase.None;
      netReadTimeoutPresent_ = null;
    }

    private object netWriteTimeoutPresent_;
    /// <summary>Enum of possible cases for the "net_write_timeout_present" oneof.</summary>
    public enum NetWriteTimeoutPresentOneofCase {
      None = 0,
      NetWriteTimeout = 4,
    }
    private NetWriteTimeoutPresentOneofCase netWriteTimeoutPresentCase_ = NetWriteTimeoutPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetWriteTimeoutPresentOneofCase NetWriteTimeoutPresentCase {
      get { return netWriteTimeoutPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNetWriteTimeoutPresent() {
      netWriteTimeoutPresentCase_ = NetWriteTimeoutPresentOneofCase.None;
      netWriteTimeoutPresent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (NetReadTimeout != other.NetReadTimeout) return false;
      if (NetWriteTimeout != other.NetWriteTimeout) return false;
      if (Destination != other.Destination) return false;
      if (ClientId != other.ClientId) return false;
      if (Filter != other.Filter) return false;
      if (StartTimestamp != other.StartTimestamp) return false;
      if (NetReadTimeoutPresentCase != other.NetReadTimeoutPresentCase) return false;
      if (NetWriteTimeoutPresentCase != other.NetWriteTimeoutPresentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (netReadTimeoutPresentCase_ == NetReadTimeoutPresentOneofCase.NetReadTimeout) hash ^= NetReadTimeout.GetHashCode();
      if (netWriteTimeoutPresentCase_ == NetWriteTimeoutPresentOneofCase.NetWriteTimeout) hash ^= NetWriteTimeout.GetHashCode();
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (StartTimestamp != 0L) hash ^= StartTimestamp.GetHashCode();
      hash ^= (int) netReadTimeoutPresentCase_;
      hash ^= (int) netWriteTimeoutPresentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Password);
      }
      if (netReadTimeoutPresentCase_ == NetReadTimeoutPresentOneofCase.NetReadTimeout) {
        output.WriteRawTag(24);
        output.WriteInt32(NetReadTimeout);
      }
      if (netWriteTimeoutPresentCase_ == NetWriteTimeoutPresentOneofCase.NetWriteTimeout) {
        output.WriteRawTag(32);
        output.WriteInt32(NetWriteTimeout);
      }
      if (Destination.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClientId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      if (StartTimestamp != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(StartTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Password);
      }
      if (netReadTimeoutPresentCase_ == NetReadTimeoutPresentOneofCase.NetReadTimeout) {
        output.WriteRawTag(24);
        output.WriteInt32(NetReadTimeout);
      }
      if (netWriteTimeoutPresentCase_ == NetWriteTimeoutPresentOneofCase.NetWriteTimeout) {
        output.WriteRawTag(32);
        output.WriteInt32(NetWriteTimeout);
      }
      if (Destination.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClientId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      if (StartTimestamp != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(StartTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Password);
      }
      if (netReadTimeoutPresentCase_ == NetReadTimeoutPresentOneofCase.NetReadTimeout) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetReadTimeout);
      }
      if (netWriteTimeoutPresentCase_ == NetWriteTimeoutPresentOneofCase.NetWriteTimeout) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NetWriteTimeout);
      }
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (StartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientAuth other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.StartTimestamp != 0L) {
        StartTimestamp = other.StartTimestamp;
      }
      switch (other.NetReadTimeoutPresentCase) {
        case NetReadTimeoutPresentOneofCase.NetReadTimeout:
          NetReadTimeout = other.NetReadTimeout;
          break;
      }

      switch (other.NetWriteTimeoutPresentCase) {
        case NetWriteTimeoutPresentOneofCase.NetWriteTimeout:
          NetWriteTimeout = other.NetWriteTimeout;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadBytes();
            break;
          }
          case 24: {
            NetReadTimeout = input.ReadInt32();
            break;
          }
          case 32: {
            NetWriteTimeout = input.ReadInt32();
            break;
          }
          case 42: {
            Destination = input.ReadString();
            break;
          }
          case 50: {
            ClientId = input.ReadString();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
          case 64: {
            StartTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadBytes();
            break;
          }
          case 24: {
            NetReadTimeout = input.ReadInt32();
            break;
          }
          case 32: {
            NetWriteTimeout = input.ReadInt32();
            break;
          }
          case 42: {
            Destination = input.ReadString();
            break;
          }
          case 50: {
            ClientId = input.ReadString();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
          case 64: {
            StartTimestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Ack : pb::IMessage<Ack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ack> _parser = new pb::MessageParser<Ack>(() => new Ack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack(Ack other) : this() {
      errorMessage_ = other.errorMessage_;
      switch (other.ErrorCodePresentCase) {
        case ErrorCodePresentOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ack Clone() {
      return new Ack(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCodePresentCase_ == ErrorCodePresentOneofCase.ErrorCode ? (int) errorCodePresent_ : 0; }
      set {
        errorCodePresent_ = value;
        errorCodePresentCase_ = ErrorCodePresentOneofCase.ErrorCode;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    /// <summary>
    /// if something like compression is not supported, erorr_message will tell about it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object errorCodePresent_;
    /// <summary>Enum of possible cases for the "error_code_present" oneof.</summary>
    public enum ErrorCodePresentOneofCase {
      None = 0,
      ErrorCode = 1,
    }
    private ErrorCodePresentOneofCase errorCodePresentCase_ = ErrorCodePresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorCodePresentOneofCase ErrorCodePresentCase {
      get { return errorCodePresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearErrorCodePresent() {
      errorCodePresentCase_ = ErrorCodePresentOneofCase.None;
      errorCodePresent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (ErrorCodePresentCase != other.ErrorCodePresentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (errorCodePresentCase_ == ErrorCodePresentOneofCase.ErrorCode) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      hash ^= (int) errorCodePresentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errorCodePresentCase_ == ErrorCodePresentOneofCase.ErrorCode) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errorCodePresentCase_ == ErrorCodePresentOneofCase.ErrorCode) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (errorCodePresentCase_ == ErrorCodePresentOneofCase.ErrorCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ack other) {
      if (other == null) {
        return;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      switch (other.ErrorCodePresentCase) {
        case ErrorCodePresentOneofCase.ErrorCode:
          ErrorCode = other.ErrorCode;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientAck : pb::IMessage<ClientAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientAck> _parser = new pb::MessageParser<ClientAck>(() => new ClientAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAck(ClientAck other) : this() {
      destination_ = other.destination_;
      clientId_ = other.clientId_;
      batchId_ = other.batchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAck Clone() {
      return new ClientAck(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "batch_id" field.</summary>
    public const int BatchIdFieldNumber = 3;
    private long batchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BatchId {
      get { return batchId_; }
      set {
        batchId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (ClientId != other.ClientId) return false;
      if (BatchId != other.BatchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (BatchId != 0L) hash ^= BatchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (BatchId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (BatchId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (BatchId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BatchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientAck other) {
      if (other == null) {
        return;
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.BatchId != 0L) {
        BatchId = other.BatchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            BatchId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            BatchId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// subscription
  /// </summary>
  public sealed partial class Sub : pb::IMessage<Sub>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sub> _parser = new pb::MessageParser<Sub>(() => new Sub());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Sub> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sub() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sub(Sub other) : this() {
      destination_ = other.destination_;
      clientId_ = other.clientId_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sub Clone() {
      return new Sub(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 7;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Sub);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Sub other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (ClientId != other.ClientId) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Sub other) {
      if (other == null) {
        return;
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Unsubscription
  /// </summary>
  public sealed partial class Unsub : pb::IMessage<Unsub>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unsub> _parser = new pb::MessageParser<Unsub>(() => new Unsub());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unsub> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsub() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsub(Unsub other) : this() {
      destination_ = other.destination_;
      clientId_ = other.clientId_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unsub Clone() {
      return new Unsub(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 7;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unsub);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unsub other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (ClientId != other.ClientId) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unsub other) {
      if (other == null) {
        return;
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 58: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///  PullRequest
  /// </summary>
  public sealed partial class Get : pb::IMessage<Get>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Get> _parser = new pb::MessageParser<Get>(() => new Get());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Get> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Get() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Get(Get other) : this() {
      destination_ = other.destination_;
      clientId_ = other.clientId_;
      fetchSize_ = other.fetchSize_;
      switch (other.TimeoutPresentCase) {
        case TimeoutPresentOneofCase.Timeout:
          Timeout = other.Timeout;
          break;
      }

      switch (other.UnitPresentCase) {
        case UnitPresentOneofCase.Unit:
          Unit = other.Unit;
          break;
      }

      switch (other.AutoAckPresentCase) {
        case AutoAckPresentOneofCase.AutoAck:
          AutoAck = other.AutoAck;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Get Clone() {
      return new Get(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fetch_size" field.</summary>
    public const int FetchSizeFieldNumber = 3;
    private int fetchSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FetchSize {
      get { return fetchSize_; }
      set {
        fetchSize_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 4;
    /// <summary>
    /// 默认-1时代表不控制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeoutPresentCase_ == TimeoutPresentOneofCase.Timeout ? (long) timeoutPresent_ : 0L; }
      set {
        timeoutPresent_ = value;
        timeoutPresentCase_ = TimeoutPresentOneofCase.Timeout;
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 5;
    /// <summary>
    /// 数字类型，0:纳秒,1:毫秒,2:微秒,3:秒,4:分钟,5:小时,6:天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unit {
      get { return unitPresentCase_ == UnitPresentOneofCase.Unit ? (int) unitPresent_ : 0; }
      set {
        unitPresent_ = value;
        unitPresentCase_ = UnitPresentOneofCase.Unit;
      }
    }

    /// <summary>Field number for the "auto_ack" field.</summary>
    public const int AutoAckFieldNumber = 6;
    /// <summary>
    /// 是否自动ack
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoAck {
      get { return autoAckPresentCase_ == AutoAckPresentOneofCase.AutoAck ? (bool) autoAckPresent_ : false; }
      set {
        autoAckPresent_ = value;
        autoAckPresentCase_ = AutoAckPresentOneofCase.AutoAck;
      }
    }

    private object timeoutPresent_;
    /// <summary>Enum of possible cases for the "timeout_present" oneof.</summary>
    public enum TimeoutPresentOneofCase {
      None = 0,
      Timeout = 4,
    }
    private TimeoutPresentOneofCase timeoutPresentCase_ = TimeoutPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeoutPresentOneofCase TimeoutPresentCase {
      get { return timeoutPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeoutPresent() {
      timeoutPresentCase_ = TimeoutPresentOneofCase.None;
      timeoutPresent_ = null;
    }

    private object unitPresent_;
    /// <summary>Enum of possible cases for the "unit_present" oneof.</summary>
    public enum UnitPresentOneofCase {
      None = 0,
      Unit = 5,
    }
    private UnitPresentOneofCase unitPresentCase_ = UnitPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitPresentOneofCase UnitPresentCase {
      get { return unitPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnitPresent() {
      unitPresentCase_ = UnitPresentOneofCase.None;
      unitPresent_ = null;
    }

    private object autoAckPresent_;
    /// <summary>Enum of possible cases for the "auto_ack_present" oneof.</summary>
    public enum AutoAckPresentOneofCase {
      None = 0,
      AutoAck = 6,
    }
    private AutoAckPresentOneofCase autoAckPresentCase_ = AutoAckPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoAckPresentOneofCase AutoAckPresentCase {
      get { return autoAckPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutoAckPresent() {
      autoAckPresentCase_ = AutoAckPresentOneofCase.None;
      autoAckPresent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Get);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Get other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (ClientId != other.ClientId) return false;
      if (FetchSize != other.FetchSize) return false;
      if (Timeout != other.Timeout) return false;
      if (Unit != other.Unit) return false;
      if (AutoAck != other.AutoAck) return false;
      if (TimeoutPresentCase != other.TimeoutPresentCase) return false;
      if (UnitPresentCase != other.UnitPresentCase) return false;
      if (AutoAckPresentCase != other.AutoAckPresentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (FetchSize != 0) hash ^= FetchSize.GetHashCode();
      if (timeoutPresentCase_ == TimeoutPresentOneofCase.Timeout) hash ^= Timeout.GetHashCode();
      if (unitPresentCase_ == UnitPresentOneofCase.Unit) hash ^= Unit.GetHashCode();
      if (autoAckPresentCase_ == AutoAckPresentOneofCase.AutoAck) hash ^= AutoAck.GetHashCode();
      hash ^= (int) timeoutPresentCase_;
      hash ^= (int) unitPresentCase_;
      hash ^= (int) autoAckPresentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (FetchSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FetchSize);
      }
      if (timeoutPresentCase_ == TimeoutPresentOneofCase.Timeout) {
        output.WriteRawTag(32);
        output.WriteInt64(Timeout);
      }
      if (unitPresentCase_ == UnitPresentOneofCase.Unit) {
        output.WriteRawTag(40);
        output.WriteInt32(Unit);
      }
      if (autoAckPresentCase_ == AutoAckPresentOneofCase.AutoAck) {
        output.WriteRawTag(48);
        output.WriteBool(AutoAck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (FetchSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FetchSize);
      }
      if (timeoutPresentCase_ == TimeoutPresentOneofCase.Timeout) {
        output.WriteRawTag(32);
        output.WriteInt64(Timeout);
      }
      if (unitPresentCase_ == UnitPresentOneofCase.Unit) {
        output.WriteRawTag(40);
        output.WriteInt32(Unit);
      }
      if (autoAckPresentCase_ == AutoAckPresentOneofCase.AutoAck) {
        output.WriteRawTag(48);
        output.WriteBool(AutoAck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (FetchSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FetchSize);
      }
      if (timeoutPresentCase_ == TimeoutPresentOneofCase.Timeout) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (unitPresentCase_ == UnitPresentOneofCase.Unit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unit);
      }
      if (autoAckPresentCase_ == AutoAckPresentOneofCase.AutoAck) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Get other) {
      if (other == null) {
        return;
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.FetchSize != 0) {
        FetchSize = other.FetchSize;
      }
      switch (other.TimeoutPresentCase) {
        case TimeoutPresentOneofCase.Timeout:
          Timeout = other.Timeout;
          break;
      }

      switch (other.UnitPresentCase) {
        case UnitPresentOneofCase.Unit:
          Unit = other.Unit;
          break;
      }

      switch (other.AutoAckPresentCase) {
        case AutoAckPresentOneofCase.AutoAck:
          AutoAck = other.AutoAck;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            FetchSize = input.ReadInt32();
            break;
          }
          case 32: {
            Timeout = input.ReadInt64();
            break;
          }
          case 40: {
            Unit = input.ReadInt32();
            break;
          }
          case 48: {
            AutoAck = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            FetchSize = input.ReadInt32();
            break;
          }
          case 32: {
            Timeout = input.ReadInt64();
            break;
          }
          case 40: {
            Unit = input.ReadInt32();
            break;
          }
          case 48: {
            AutoAck = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// </summary>
  public sealed partial class Messages : pb::IMessage<Messages>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Messages> _parser = new pb::MessageParser<Messages>(() => new Messages());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Messages> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Messages() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Messages(Messages other) : this() {
      batchId_ = other.batchId_;
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Messages Clone() {
      return new Messages(this);
    }

    /// <summary>Field number for the "batch_id" field.</summary>
    public const int BatchIdFieldNumber = 1;
    private long batchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BatchId {
      get { return batchId_; }
      set {
        batchId_ = value;
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int Messages_FieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_messages_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> messages_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Messages_ {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Messages);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Messages other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BatchId != other.BatchId) return false;
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BatchId != 0L) hash ^= BatchId.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BatchId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BatchId);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BatchId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BatchId);
      }
      messages_.WriteTo(ref output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BatchId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BatchId);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Messages other) {
      if (other == null) {
        return;
      }
      if (other.BatchId != 0L) {
        BatchId = other.BatchId;
      }
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BatchId = input.ReadInt64();
            break;
          }
          case 18: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BatchId = input.ReadInt64();
            break;
          }
          case 18: {
            messages_.AddEntriesFrom(ref input, _repeated_messages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TBD when new packets are required
  /// </summary>
  public sealed partial class Dump : pb::IMessage<Dump>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Dump> _parser = new pb::MessageParser<Dump>(() => new Dump());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dump> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dump() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dump(Dump other) : this() {
      journal_ = other.journal_;
      position_ = other.position_;
      switch (other.TimestampPresentCase) {
        case TimestampPresentOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dump Clone() {
      return new Dump(this);
    }

    /// <summary>Field number for the "journal" field.</summary>
    public const int JournalFieldNumber = 1;
    private string journal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Journal {
      get { return journal_; }
      set {
        journal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private long position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestampPresentCase_ == TimestampPresentOneofCase.Timestamp ? (long) timestampPresent_ : 0L; }
      set {
        timestampPresent_ = value;
        timestampPresentCase_ = TimestampPresentOneofCase.Timestamp;
      }
    }

    private object timestampPresent_;
    /// <summary>Enum of possible cases for the "timestamp_present" oneof.</summary>
    public enum TimestampPresentOneofCase {
      None = 0,
      Timestamp = 3,
    }
    private TimestampPresentOneofCase timestampPresentCase_ = TimestampPresentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimestampPresentOneofCase TimestampPresentCase {
      get { return timestampPresentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestampPresent() {
      timestampPresentCase_ = TimestampPresentOneofCase.None;
      timestampPresent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dump);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dump other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Journal != other.Journal) return false;
      if (Position != other.Position) return false;
      if (Timestamp != other.Timestamp) return false;
      if (TimestampPresentCase != other.TimestampPresentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Journal.Length != 0) hash ^= Journal.GetHashCode();
      if (Position != 0L) hash ^= Position.GetHashCode();
      if (timestampPresentCase_ == TimestampPresentOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      hash ^= (int) timestampPresentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Journal.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Journal);
      }
      if (Position != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Position);
      }
      if (timestampPresentCase_ == TimestampPresentOneofCase.Timestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Journal.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Journal);
      }
      if (Position != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Position);
      }
      if (timestampPresentCase_ == TimestampPresentOneofCase.Timestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Journal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Journal);
      }
      if (Position != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Position);
      }
      if (timestampPresentCase_ == TimestampPresentOneofCase.Timestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dump other) {
      if (other == null) {
        return;
      }
      if (other.Journal.Length != 0) {
        Journal = other.Journal;
      }
      if (other.Position != 0L) {
        Position = other.Position;
      }
      switch (other.TimestampPresentCase) {
        case TimestampPresentOneofCase.Timestamp:
          Timestamp = other.Timestamp;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Journal = input.ReadString();
            break;
          }
          case 16: {
            Position = input.ReadInt64();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Journal = input.ReadString();
            break;
          }
          case 16: {
            Position = input.ReadInt64();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientRollback : pb::IMessage<ClientRollback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientRollback> _parser = new pb::MessageParser<ClientRollback>(() => new ClientRollback());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientRollback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CanalSharp.Protocol.CanalPacketReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRollback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRollback(ClientRollback other) : this() {
      destination_ = other.destination_;
      clientId_ = other.clientId_;
      batchId_ = other.batchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRollback Clone() {
      return new ClientRollback(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "batch_id" field.</summary>
    public const int BatchIdFieldNumber = 3;
    private long batchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BatchId {
      get { return batchId_; }
      set {
        batchId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientRollback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientRollback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (ClientId != other.ClientId) return false;
      if (BatchId != other.BatchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (BatchId != 0L) hash ^= BatchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (BatchId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Destination.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Destination);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (BatchId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (BatchId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BatchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientRollback other) {
      if (other == null) {
        return;
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.BatchId != 0L) {
        BatchId = other.BatchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            BatchId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Destination = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 24: {
            BatchId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
